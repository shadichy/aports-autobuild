name: Package updates

on:
  push:
  workflow_dispatch:

jobs:
  update-packages:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
        with:
          repository: alpinelinux/aports
          path: aports
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup
        uses: jirutka/setup-alpine@v1.1.3
      - name: Install deps
        run: |
          apk add abuild abuild-rootbld findutils sed
          cd aports
          find main community testing -name APKBUILD -exec sed -ri -e 's|pkgdir"/lib/|pkgdir"/usr/lib/|g' -e 's|pkgdir"/bin/|pkgdir"/usr/bin/|g' -e 's|pkgdir"/sbin/|pkgdir"/usr/bin/|g' {} +
          echo -e "\n" | abuild-keygen
          cd ..
        shell: alpine.sh --root {0}
      - name: Build
        run: |
          export CBUILD=x86_64
          export PACKAGER_PRIVKEY=$(ls -d ~/.abuild/*.rsa | head -1)
          cd aports
          sh -c "for pkg in main/*/ community/*/; do cd "$pkg" && { abuild -Frfq || true; } >/dev/null 2>&1 && cd ../..;done;"
          cd ..
        shell: alpine.sh --root {0}
      - name: Artifact
        run: |
          mkdir -p dist
          find ~/ -type f -name "*.apk" -exec cp -t dist/ {} + || true
          find . -type f -name "*.apk" -exec cp -t dist/ {} + || true
          find /root/ -type f -name "*.apk" -exec cp -t dist/ {} + || true
          cd dist/
          apk index -vU -o APKINDEX.tar.gz *.apk || true
          cd ..
        shell: alpine.sh --root {0}
      - name: Deploy
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: dist/*
